
server {

	root /var/www/templatewebsiteaddress;
	index index.php index.html index.htm;

    server_name templatewebsiteaddress; # managed by Certbot

	location = /favicon.ico {
	        log_not_found off;
	        access_log off;
	}

	location = /robots.txt {
	        allow all;
	        log_not_found off;
	        access_log off;
	}

	location / {
	        # This is cool because no php is touched for static content.
	        # include the "?$args" part so non-default permalinks doesn't break when using query string
	        try_files $uri $uri/ /index.php?$args;
			# Bad Bot Blocker
			include /etc/nginx/bots.d/ddos.conf;
			include /etc/nginx/bots.d/blockbots.conf;
	}

	location ~ \.php$ {
	        #NOTE: You should have "cgi.fix_pathinfo = 0;" in php.ini
	        include fastcgi.conf;
	        fastcgi_intercept_errors on;
	        fastcgi_pass unix:/run/php/php7.2-fpm.sock;
			# Bad Bot Blocker
			include /etc/nginx/bots.d/ddos.conf;
			include /etc/nginx/bots.d/blockbots.conf;
	}

	location ~* \.(js|css|png|jpg|jpeg|gif|ico)$ {
	        expires max;
	        log_not_found off;
	}

	error_page 404 /404.html;
	error_page 500 502 503 504 /50x.html;
	location = /50x.html {
		root /usr/share/nginx/html;
	}


	include /etc/nginx/wordpress.d/wp-admin.conf; #WordPress Rules


    listen [::]:443 ssl; # managed by Certbot
    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/templatewebsiteaddress/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/templatewebsiteaddress/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}

server {
    if ($host = templatewebsiteaddress) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


	listen 80 ;
	listen [::]:80  ;
    server_name templatewebsiteaddress;
    return 404; # managed by Certbot
}
